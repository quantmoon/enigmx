def getBarrierValues(date_, dataset):
    
    info_ = dataset.loc[
        datetime.strptime(
            date_,'%Y-%m-%d'
            ).date()
        ]
        
    timeTicks, tickPrices = getTickPrices(path, date_)
    conditionPrices_ = np.select(
        [
            tickPrices>info_.upper,
            tickPrices<info_.lower
            ], [
                tickPrices, tickPrices
            ]
        )

    try: 
        tickPrices[conditionPrices_!=0][0]
    except IndexError:
        price_ = 0 
        tsprice_ = 0
    else:
        price_ = tickPrices[conditionPrices_!=0][0]
        tsprice_ = datetime.fromtimestamp(
            timeTicks[conditionPrices_!=0][0] / 10**3
            ).time()   
            
    return [price_, tsprice_]
    
                                                    
def getBarrierCoords(path, dataset, initHorizon, endHorizon):
    
    list_dates = extract_date_available_market(
        str(initHorizon), str(endHorizon)
       )[:-1]
        
    dictBarriers = {
        date_: getBarrierValues(date_, dataset) 
        for date_ in list_dates
        }

    return dictBarriers 